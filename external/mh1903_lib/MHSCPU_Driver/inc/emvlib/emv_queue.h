#ifndef EMV_QUEUE_H
#ifdef __cplusplus
extern "C" {
#endif
#define EMV_QUEUE_H

#include "emv_core.h"
#include "emv_errno.h"

/**
 * ===================================================================
 * 使用指定的环行队列缓冲区初始化设备信息中的数据缓冲区
 * -------------------------------------------------------------------
 * 参数：
 * -------------------------------------------------------------------
 * [输入]terminal  : 逻辑设备信息
 * -------------------------------------------------------------------
 * 返回：
 * -------------------------------------------------------------------
 *      0 - 成功
 *      其它，失败
 * ===================================================================
 */
int emv_core_init(struct emv_core *terminal, struct emv_queue *queue);

/**
 * ===================================================================
 * 注册逻辑设备节点头和逻辑设备数量
 * -------------------------------------------------------------------
 * 参数：
 * -------------------------------------------------------------------
 * [输入]terminal  : 逻辑设备信息节点头
 * -------------------------------------------------------------------
 * [输入]nums      : 逻辑设备数量
 * -------------------------------------------------------------------
 * 返回：
 * -------------------------------------------------------------------
 *      0 - 成功
 *      其它，失败
 * ===================================================================
 */
int emv_core_register(struct emv_core *devs, int nums);

/**
 * ===================================================================
 * 获取驱动中的设备信息节点头
 * -------------------------------------------------------------------
 * 参数：
 * -------------------------------------------------------------------
 * [输出]devs  : 逻辑设备信息节点头
 * -------------------------------------------------------------------
 * 返回：
 * -------------------------------------------------------------------
 *      0 - 成功
 *      其它，失败
 * ===================================================================
 */
int emv_core_devs(struct emv_core **devs);

/**
 * ===================================================================
 * 刷新环行队列缓冲区，操作后缓冲区为空，状态信息复位
 * -------------------------------------------------------------------
 * 参数：
 * -------------------------------------------------------------------
 * [输入]terminal  : 逻辑设备信息
 * -------------------------------------------------------------------
 * 返回：
 * -------------------------------------------------------------------
 *      0 - 成功
 *      其它，失败
 * ===================================================================
 */
int emv_queue_flush(struct emv_core *terminal);

/**
 * ===================================================================
 * 判断环行队列缓冲区是否为空
 * -------------------------------------------------------------------
 * 参数：
 * -------------------------------------------------------------------
 * [输入]terminal  : 逻辑设备信息
 * -------------------------------------------------------------------
 * 返回：
 * -------------------------------------------------------------------
 *      1 - 空
 *      0 - 非空
 * ===================================================================
 */
int emv_queue_empty(struct emv_core *terminal);

/**
 * ===================================================================
 * 环行队列缓冲区有效数据字节数
 * -------------------------------------------------------------------
 * 参数：
 * -------------------------------------------------------------------
 * [输入]terminal  : 逻辑设备信息
 * -------------------------------------------------------------------
 * 返回：
 * -------------------------------------------------------------------
 *      有效数据字节数
 * ===================================================================
 */
int emv_queue_length(struct emv_core *terminal);

/**
 * ===================================================================
 * 填充指定个数的字节数据到环行队列缓冲区
 * -------------------------------------------------------------------
 * 参数：
 * -------------------------------------------------------------------
 * [输入/出]terminal  : 逻辑设备信息
 * -------------------------------------------------------------------
 * [输入]pbuf         : 数据缓冲区
 * -------------------------------------------------------------------
 * [输入]length       ：待填充的数据字节数
 * -------------------------------------------------------------------
 * 返回：
 * -------------------------------------------------------------------
 *       请参阅错误定义文档"emv_errno.h"
 * ===================================================================
 */
int emv_queue_fill(struct emv_core *terminal, unsigned char *pbuf, int length);

/**
 * ===================================================================
 * 从环行队列缓冲区获取指定个数的数据信息
 * -------------------------------------------------------------------
 * 参数：
 * -------------------------------------------------------------------
 * [输入]terminal  : 逻辑设备信息
 * -------------------------------------------------------------------
 * [输出]pbuf      : 数据缓冲区
 * -------------------------------------------------------------------
 * [输入]length    ：期望获取数据字节数
 * -------------------------------------------------------------------
 * 返回：
 * -------------------------------------------------------------------
 *       请参阅错误定义文档"emv_errno.h"
 * ===================================================================
 */
int emv_queue_spill(struct emv_core *terminal, unsigned char *pbuf, int length);

#ifdef __cplusplus
}
#endif
#endif
